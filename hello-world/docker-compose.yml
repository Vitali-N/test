version: '3.8'

services:

  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    image: app:latest
    container_name: app
    environment:
      APP_PORT: 5000
    ports:
      - "5000:5000"
      - "8000:8000"
    volumes:
      - ./app/app.py:/app/app.py
    networks:
      - back


  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    restart: always
    networks:
      - front
      - back
    depends_on:
      - app


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    restart: always
    networks:
      - back    
    depends_on:
      - nginx

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:0.10.0
    container_name: nginx-exporte
    ports:
      - "9113:9113"
    command:
      - -nginx.scrape-uri
      - http://nginx:8080/stub_status
    restart: always
    networks:
      - back
    depends_on:
      - prometheus

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/default.yaml
      - ./monitoring/grafana/datasource.yaml:/etc/grafana/provisioning/datasources/default.yaml
#    restart: always
    networks:
      - back
    depends_on:
      - prometheus


networks:
  front:
  back: